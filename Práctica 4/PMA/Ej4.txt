4. Simular la atención en un locutorio con 10 cabinas telefónicas, que tiene un empleado que
se encarga de atender a los clientes. Hay N clientes que al llegar esperan hasta que el
empleado les indica a que cabina ir, la usan y luego se dirigen al empleado para pagarle. El
empleado atiende a los clientes en el orden en que hacen los pedidos, pero siempre dando
prioridad a los que terminaron de usar la cabina. Nota: maximizar la concurrencia; suponga
que hay una función Cobrar() llamada por el empleado que simula que el empleado le cobra
al cliente.

chan llegada(int);
chan cabinas[0..N.1](int);
chan pago(int,int);
chan fin[0..N-1]();
chan atendeme();

Process Cliente[id:0..N-1]{
    int cab;

    send llegada(id);
    send atendeme();
    receive cabinas[id](cab);
    usarCabina(cab);
    send pago(id,cab);
    send atendeme();
    receive fin[id]();
}

Process Empleado{
    int cli,cabi;
    Queue(int) cabs;

    while(true){
        receive atendeme();
        if (not empty(pago)) ->
            receive pago(cli,cabi);
            Push(cabs,cabi);
            cobrar(cli);
            send fin[cli]();
         (not empty (llegada)&&(empty(pago))&&(!empty(cabs))) ->
            receive llegada(cli);
            send cabinas[cli](Pop(cabs));
        fi
    }
}