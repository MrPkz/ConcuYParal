Se debe simular una maratón con C corredores donde en la llegada hay UNA máquinas
expendedoras de agua con capacidad para 20 botellas. Además existe un repositor encargado
de reponer las botellas de la máquina. Cuando los C corredores han llegado al inicio comienza
la carrera. Cuando un corredor termina la carrera se dirigen a la máquina expendedora, espera
su turno (respetando el orden de llegada), saca una botella y se retira. Si encuentra la máquina
sin botellas, le avisa al repositor para que cargue nuevamente la máquina con 20 botellas; espera
a que se haga la recarga; saca una botella y se retira. Nota: maximizar la concurrencia; mientras
se reponen las botellas se debe permitir que otros corredores se encolen. 


sem mutex=1;
sem lista=20;
sem recarga=0;
sem partir=0;
sem next[n]=([n] 0);
int llegados=0;
int botellas=20;
bool libre=true;
cola C;

process Corredor[id:1..C]{
    int auxi;
    P(mutex); 
    llegados++;
    if(llegados==C){
        for(i:1 to C){V(partir);}
    }
    V(mutex);
    P(partir);
    //RUN
    P(mutex);
    if(libre){
        libre=false;
        V(mutex);
    }else{
        Push(C,id);
        V(mutex);
        P(next[id]);
    }

    P(lista);
    botellas--;
    if(botellas==0){V(recarga);} //Lo podes implementar asi o haciendo que llame el que la encontro vacia
    
    P(mutex);
    if(empty(C)){
        libre=true;
    }else{
        Pop(C,auxi);
        V(next[auxi]);
    }
    V(mutex);
}

process Repositor{
    while(true){
        P(recarga);
        botellas=20;
        for(i:1 to 20){V(lista);}
    }
}